from pwn import *

table = bytearray(b"\xad\xf7\xb1\x83\x60\x53\xb7\x5e\x44\x91\x55\x4b\xbc\xfb\x85\x5b\x3f\xec\x55\xd5\x21\xe3\xb1\xa9\x15\xc9\x90\x48\xc2\x25\x2e\x30\x06\xb3\xa6\xe4\xf5\xac\x7e\x12\xad\x6b\xc2\x82\xbf\x0d\x8a\x2a\x0f\x7a\xdd\x8f\x9a\xae\x68\x14\xa4\xa6\xd5\xd7\x20\x96\x00\x00\x67\x7c\xea\x32\x8b\xc0\xc6\x9f\xda\xd7\xe8\x1c\xd3\xf6\xaf\xb5")
target = bytearray(b"\x67\x7c\xea\x32\x8b\xc0\xc6\x9f\xda\xd7\xe8\x1c\xd3\xf6\xaf\xb5")

for i in range(4):
    for j in range(16):
        target[j] = (target[j] - table[i * 16 + j]) & 0xFF  #tutto sta in questa riga dove basta fare le operazioni inverse di main

#& 0xFF per mascherare il risultato della sottrazione e assicurarmi che rimanga nel range valido dei byte. 
# In questo modo, gli errori dovuti a valori negativi o superiori a 255 dovrebbero essere evitati

flag = bytes(target).decode()
print(flag)

#flag{0xr0ll0v3r}
