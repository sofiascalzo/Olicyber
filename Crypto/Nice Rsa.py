from Crypto.Util.number import long_to_bytes

n = 137866207154126841926135173451358115364278213684521572523358907639756849267625989203803139156255011696944207127190680285326855425852764146184626857091525539105016966652616046475290899093074083795277502910801200926744561269527098028426269373323424980295041083818220821875656945269376954220805993190237542387003
e = 65537

ct = 67932802035805588854278977673045833517593273239942847623689503474317866628886199433810017197037291176343627455376241464624870557830239851446861917867043000728823054049444875946790685574440463627283062014107345418490148867942084538625043907585104640830388180234446782401778750812259071969890168545489104373218
d = 84223405646120151520464377976898925261144190934696281476383120758852937640232871961680673244106106524719703690302169256811134331520623741104931648952094344705237518934300453067157623206568839404447194989158318027119368456754543086249330777085027917263172428124148689348743629837711301937583005553444165146881

#il sorgente calcola gi√† d, quindi basta aggiungere print(d), per ottenere la chiave segreta
plaintext = pow(ct, d, n)
plaintext = long_to_bytes(plaintext)
print(plaintext)