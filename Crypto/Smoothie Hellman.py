'''
sage
g = 2
_p = 108128463235366041945340055252601236436722739562475915350171739661985141189580464478045666055658415124708942200665822026776636750895687970890616333253250505703801852713697535822641138816186964174970405303684597286026503767563484561052251599425037353225030719144262527511767887504882025361455732252568245241328749579315841478926611457369854605767271323936207107154599088557953206753925515026853726256802032820977856143695676153815279808422071281476592023116966640535805557931924779136571539467894473239958652033663643282006156900918910796527501036194067120821185680751335989131443693065124655916698379331171124187717464055786609894241
_h = 97434360793545716674176132071237759858192315851702188898459377972575651558497444498024493453556104611888588675566788039443518670403128940852429855059424462387101340780281439844038248714618377385511124923353379023802633564592790924499414217145171245383082890012782435909483236208213492910293847714222853703641424685252423047605708815812554876956416595215213745755649719820615853449594163190873209666735301878757083554371157742469032717942236866396861058010408573356006525564520031587705565777117585443702604408226724492760420035075811467421853451452661282493610273181206226438291229660367124860586851301087297231469295004495974834555

p1_factors = [2, 36209, 547798523, 585495871, 603764827, 620106793, 620486891, 622959187, 624928979, 642300709, 643598621, 644170013, 670656013, 675669877, 676128059, 679467623, 685343431, 715193489, 721280123, 721341683, 733843933, 738509881, 803591153, 845584237, 855999569, 864585809, 864781919, 875862569, 879413083, 895364923, 902987851, 919851767, 951702877, 995048801, 1025446181, 1030369169, 1047227333]
p2_factors = [2, 40063, 551582609, 555256837, 567856451, 573405799, 583336199, 592968841, 604811437, 607714537, 631781797, 642077581, 658176689, 693045383, 696054091, 783195877, 803763223, 816799999, 831612053, 831917677, 854559229, 859490563, 878834741, 888267077, 898662421, 914208679, 926926393, 973394783, 982425319, 995929153, 1014167779, 1021103537, 1026380813, 1030635341, 1059922679, 1067331847, 1072990939]


def dlog(p, p_factors):
    g = 2
    h = _h % p
    R = IntegerModRing(p)
    x = discrete_log(R(h), R(g))
    return x

X = []
MOD = []

for p_factors in [p1_factors, p2_factors]:
    p = prod(p_factors) + 1  # Calcola il valore di p dalla fattorizzazione di p-1
    x = dlog(p, p_factors)
    assert pow(g, x, p) == _h % p
    X.append(x)
    MOD.append(prod(p_factors))

x = crt(X, MOD)
assert pow(g, x, _p) == _h
print(x)
'''
from Crypto.Cipher import AES
from binascii import unhexlify

IV_hex = "c2d73d0f73170d868e46b82e5c7aef0c"
FLAG_hex = "4b696e66abc27ec5da59c08cb899dd3bb745d49909aa4261a8770df135b035d37dbd4bbbb2540c035291240d6ce75c10a87fa62aa1a6cea7cf02b0f736ff0134"

IV = unhexlify(IV_hex)
FLAG = unhexlify(FLAG_hex)

n=108128463235366041945340055252601236436722739562475915350171739661985141189580464478045666055658415124708942200665822026776636750895687970890616333253250505703801852713697535822641138816186964174970405303684597286026503767563484561052251599425037353225030719144262527511767887504882025361455732252568245241328749579315841478926611457369854605767271323936207107154599088557953206753925515026853726256802032820977856143695676153815279808422071281476592023116966640535805557931924779136571539467894473239958652033663643282006156900918910796527501036194067120821185680751335989131443693065124655916698379331171124187717464055786609894241
g=2
A=43265783938284422159731338281333544085860484210221774766220313060776648592040529820335725611507109611765369212409042411477262611589337266261297631639604529039055337948778922519137188108967133663843931970818298862808900209206061701180025066680656218913388221533889627635942988977441168762657309256001690071845124182959674041443391114838641869731557300759367398401339406947072833093635152191458455722561211241171612758609639954137721278129494310931727028140316670655735111369086569741225399324541054361361364738219277775415663927891084975497156058676028595606318379277674475779500812361470343810320842452358428892975951130740914380273
B=97434360793545716674176132071237759858192315851702188898459377972575651558497444498024493453556104611888588675566788039443518670403128940852429855059424462387101340780281439844038248714618377385511124923353379023802633564592790924499414217145171245383082890012782435909483236208213492910293847714222853703641424685252423047605708815812554876956416595215213745755649719820615853449594163190873209666735301878757083554371157742469032717942236866396861058010408573356006525564520031587705565777117585443702604408226724492760420035075811467421853451452661282493610273181206226438291229660367124860586851301087297231469295004495974834555


'''
#factordb
p=4201194382473724823946246369346444780058722825268751353622767260183935447205795410417708279026655410837681044208820543971556174955272571543279103546036946903688486408381750497037497524473149533123556229033077657037452523962762626008378398390600409746251823505465922258908732039685353291496588990197836270398014253339
q=25737553036453033170874873232492616472696251153498345345893349066914349319700028526259065151440470760781885101651616163782998343068021108194360596481454344775056268387636520767391616783538213196153998980567585557740463660083917063025907541863194906635695830144597030344814258845557193440907517374289359866191267367219
factors_p_minus_1 = [2, 36209, 547798523, 585495871, 603764827, 620106793, 620486891, 622959187, 624928979, 642300709, 643598621, 644170013, 670656013, 675669877, 676128059, 679467623, 685343431, 715193489, 721280123, 721341683, 733843933, 738509881, 803591153, 845584237, 855999569, 864585809, 864781919, 875862569, 879413083, 895364923, 902987851, 919851767, 951702877, 995048801, 1025446181, 1030369169, 1047227333]
factors_q_minus_1 = [2, 40063, 551582609, 555256837, 567856451, 573405799, 583336199, 592968841, 604811437, 607714537, 631781797, 642077581, 658176689, 693045383, 696054091, 783195877, 803763223, 816799999, 831612053, 831917677, 854559229, 859490563, 878834741, 888267077, 898662421, 914208679, 926926393, 973394783, 982425319, 995929153, 1014167779, 1021103537, 1026380813, 1030635341, 1059922679, 1067331847, 1072990939]
'''

b=51154325754618357722590669110453961507709309747621951556084697776251049416930312917746298389621438387607158747220385896794883790316097795870105874328025843068642186556840131295722712472969144797449796103246418149294417693124111011979191675620102150681891652313473265958286647841959670434259069568689003564974165800429712624211671723577368733934701341133948987770937081855039282215704171446755954954879490535465776241084903279213437581720265268000429447451851932622168105426614047152048184978794875524638337603107306714562407170420903967702168554617304401510607636712540423503705686492614866752483790537444024929420217916378826361394

key = pow(A, b, n)
key = key.to_bytes(-(key.bit_length()//-8), "big")[:16]
flag = AES.new(key, AES.MODE_CBC, IV).decrypt(FLAG)
print("flag",flag)

#flag{Why_u_U53_4_c0mp05173_m0DuL3_4_D1ff13_h311m4n}

#https://crypto.stackexchange.com/questions/67093/diffie-hellman-private-key-recover-with-non-prime-modulus
#https://github.com/pberba/ctf-solutions/blob/master/20180913_sect/matryoskal/matry.sage